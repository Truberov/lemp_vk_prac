---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      become: true
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
        force_apt_get: yes
      loop: [ 'aptitude' ]

    - name: Install LEMP Packages
      become: true
      apt:
        name: "{{ item }}"
        update_cache: yes
        state: latest
      loop:
        - nginx
        - php-fpm
        - postgresql

    # Nginx Configuration
    - name: Sets Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enables new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx

    - name: Removes "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx

    # PostgreSQL Configuration
    - name: Configure PostgreSQL
      become: true
      postgresql_user:
          db: postgres
          login_user: postgres
          login_password: postgres
          name: "{{ pg_user }}"
          password: "{{ pg_password }}"
          priv: "ALL"
          state: present
    - name: Create a PostgreSQL Database
      postgresql_db:
        name: "{{ pg_database }}"
        login_user: postgres
        login_password: postgres

    - name: Create a PostgreSQL User
      postgresql_user:
        name: "{{ pg_user }}"
        password: "{{ pg_password }}"
        login_user: postgres
        login_password: postgres

    # UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

    # Sets Up PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/html/info.php"

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
